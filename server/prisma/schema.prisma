// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
 url = env("DATABASE_URL")
}


model Users {
  id       String     @id @default(uuid())
  userId  String      @unique
  name     String
  email    String     @unique
}

model Products {
 productId       String   @id
  drugName        String
  mainTypeOfDrug  String
  drugType        String
  stockQuantity   Int
  stocks              Stocks[]
  orders              Orders[]
  remainingFullStock  RemainingFullStock[] // One-to-one relation (optional)
}

model Stocks {
   id            String   @id @default(uuid())
  productId     String @unique
  drugName      String
  category      String
  stockQuantity Int
  timestamp     DateTime
  product    Products  @relation(fields: [productId], references: [productId])
remainingFullStock  RemainingFullStock[]
}

model Orders {
  id            String   @id @default(cuid())
  productId     String @unique
  productName   String
  stockQuantity Int
  ward          Int
  timestamp     DateTime
  product    Products  @relation(fields: [productId], references: [productId])
}

model Released {
  id            String   @id @default(cuid())
 releasedId        String @unique
  productName      String
  releaseDate      DateTime
  category         String
  ward             Int
  releasedQuantity Int
  releasedByCategory  ReleasedByCategory[]  // One-to-many relation to ReleasedByCategory
  releasedSummary      ReleasedSummary[] 
  remainingFullStock  RemainingFullStock[]     // One-to-many relation
 }

model ReleasedByCategory {
  id           String   @id @default(uuid())
  releasedId   String
  productName  String
  date         DateTime
  category     String
  released    Released[]  // Relation to Released model
}

model RemainingFullStock {
  id            String   @id @default(uuid())
  productId     String   
  stockQuantity Int
  productName   String
  category      String
  releasedQuantity Int
  remainingQuantity Int
  product    Products[]
 stocks              Stocks[]
 released            Released[]
 releasedSummary      ReleasedSummary[] 
  shortExpirySummary   ShortExpirySummary[] 
}

model ShortExpirySummary {
   id                String   @id @default(uuid())
  productId         String   @unique
  productName       String
  category          String
  expirationDate    DateTime
  remainingQuantity Int
  remainingFullStock  RemainingFullStock[]
}

model ReleasedSummary {
   id               String  @id @default(uuid())
  releasedId       String
  productName      String
  category         String
  ward             String
  stockQuantity     Int
  releasedQuantity Int
  released    Released[]  // Relation to Released model
remainingFullStock  RemainingFullStock[]
}

